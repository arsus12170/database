Server [localhost]:
Database [postgres]:
Port [5432]:
Username [postgres]:
Password for user postgres:
psql (17.6)
WARNING: Console code page (866) differs from Windows code page (1251)
         8-bit characters might not work correctly. See psql reference
         page "Notes for Windows users" for details.
Type "help" for help.


postgres=# CREATE TABLE departments (dept_id SERIAL PRIMARY KEY, dept_name VARCHAR(100) NOT NULL, location VARCHAR(100));
CREATE TABLE
postgres=# CREATE TABLE employees (emp_id SERIAL PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, dept_id INTEGER REFERENCES departments(dept_id));
CREATE TABLE
postgres=# DROP TABLE employees;
DROP TABLE
postgres=# CREATE TABLE employees (emp_id SERIAL PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, dept_id INTEGER, FOREIGN KEY (dept_id) REFERENCES departments(dept_id));
CREATE TABLE
postgres=# ALTER TABLE employees
postgres-# DROP COLUMN dept_id;
ALTER TABLE
postgres=# ALTER TABLE employees
postgres-# ADD COLUMN dept_id INTEGER;
ALTER TABLE
postgres=# ALTER TABLE employees
postgres-# ADD CONSTRAINT fk_employee_department
postgres-# FOREIGN KEY (dept_id) REFERENCES departments(dept_id);
ALTER TABLE
postgres=# DROP TABLE employees;
DROP TABLE
postgres=# CREATE TABLE employees (emp_id SERIAL PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, dept_id INTEGER, CONSTRAINT fk_employee_department FOREIGN KEY(dept_id) REFERENCES departments(dept_id));
CREATE TABLE
postgres=# INSERT INTO departments (dept_name, location) VALUES ('Engineering', 'Building A'), ('Marketing', 'Building B'), ('HR', 'Building C');
INSERT 0 3
postgres=# INSERT INTO employees (first_name, last_name, dept_id) VALUES ('John', 'Smith', 1);
INSERT 0 1
postgres=# SELECT * FROM departments;
 dept_id |  dept_name  |  location
---------+-------------+------------
       1 | Engineering | Building A
       2 | Marketing   | Building B
       3 | HR          | Building C
(3 rows)


postgres=# SELECT * FROM employees;
 emp_id | first_name | last_name | dept_id
--------+------------+-----------+---------
      1 | John       | Smith     |       1
(1 row)


postgres=# INSERT INTO employees (first_name, last_name, dept_id) VALUES ('John', 'Smith', 99);
ОШИБКА:  INSERT или UPDATE в таблице "employees" нарушает ограничение внешнего ключа "fk_employee_department"
DETAIL:  Ключ (dept_id)=(99) отсутствует в таблице "departments".

postgres=# DROP TABLE employees;
DROP TABLE
postgres=# DROP TABLE departments;
DROP TABLE
postgres=# CREATE TABLE departments (dept_id SERIAL PRIMARY KEY, dept_name VARCHAR(100) NOT NULL, location VARCHAR(100));
CREATE TABLE
postgres=# INSERT INTO departments (dept_name, location) VALUES ('Engineering', 'Building A'), ('Marketing', 'Building B'), ('HR', 'Building C');
INSERT 0 3
postgres=# CREATE TABLE employees (emp_id SERIAL PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, dept_id INTEGER REFERENCES departments(dept_id));
CREATE TABLE
postgres=# INSERT INTO employees (first_name, last_name, dept_id) VALUES ('John', 'Smith', 1);
INSERT 0 1
postgres=# DROP TABLE employees;
DROP TABLE
postgres=# CREATE TABLE employees (emp_id SERIAL PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, dept_id INTEGER REFERENCES departments(dept_id) ON DELETE CASCADE);
CREATE TABLE
postgres=# DROP TABLE employees;
DROP TABLE
postgres=# CREATE TABLE employees (emp_id SERIAL PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, dept_id INTEGER REFERENCES departments(dept_id) ON DELETE SET NULL);
CREATE TABLE
postgres=# DROP TABLE employees;
DROP TABLE
postgres=# CREATE TABLE employees (emp_id SERIAL PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, dept_id INTEGER REFERENCES departments(dept_id) ON DELETE SET DEFAULT);
CREATE TABLE
postgres=# DROP TABLE employees;
DROP TABLE
postgres=# CREATE TABLE employees (emp_id SERIAL PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, dept_id INTEGER REFERENCES departments(dept_id) ON DELETE RESTRICT);
CREATE TABLE
postgres=# DROP TABLE employees;
DROP TABLE
postgres=# CREATE TABLE employees (emp_id SERIAL PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, dept_id INTEGER REFERENCES departments(dept_id) ON UPDATE CASCADE);
CREATE TABLE
postgres=# UPDATE departments SET dept_id = 100 WHERE dept_id = 1;
UPDATE 1
postgres=# INSERT INTO employees (first_name, last_name, dept_id) VALUES ('John', 'Smith', '100');
INSERT 0 1
postgres=# UPDATE departments SET dept_id = 1 WHERE dept_id = 100;
UPDATE 1
postgres=# SELECT * FROM employees;
 emp_id | first_name | last_name | dept_id
--------+------------+-----------+---------
      1 | John       | Smith     |       1
(1 row)


postgres=# DROP TABLE employees;
DROP TABLE
postgres=# CREATE TABLE employees (emp_id SERIAL PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, dept_id INTEGER REFERENCES departments(dept_id) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE TABLE
postgres=# CREATE TABLE users (user_id SERIAL PRIMARY KEY, username VARCHAR(50) UNIQUE NOT NULL, email VARCHAR(100) UNIQUE NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE                                   ^
postgres=# CREATE TABLE user_profiles (profile_id SERIAL PRIMARY KEY, user_id INTEGER REFERENCES users(user_id) ON DELETE CASCADE UNIQUE NOT NULL, first_name VARCHAR(50), last_name VARCHAR(50), bio TEXT, profile_picture_url VARCHAR(255));
CREATE TABLE
postgres=# DROP TABLE user_profiles;
DROP TABLE
postgres=# CREATE TABLE user_profiles (user_id INTEGER PRIMARY KEY REFERENCES users(user_id) ON DELETE CASCADE, first_name VARCHAR(50), last_name VARCHAR(50), bio TEXT, profile_picture_url VARCHAR(255));
CREATE TABLE
postgres=# INSERT INTO users (username, email) VALUES ('johndoe', 'john@example.com');
INSERT 0 1
postgres=# INSERT INTO user_profiles (user_id, first_name, last_name, bio) VALUES (1, 'John', 'Doe', 'Hello World');
INSERT 0 1
postgres=# drop table employees;
DROP TABLE
postgres=# DROP TABLE departments;
DROP TABLE
postgres=# CREATE TABLE departments (dept_id SERIAL PRIMARY KEY, dept_name VARCHAR(100) NOT NULL, manager_name VARCHAR(100), budget DECIMAL (10, 2));
CREATE TABLE
postgres=# CREATE TABLE employees (emp_id SERIAL PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, POSITION VARCHAR(100), salary DECIMAL(10, 2), hire_date DATE DEFAULT CURRENT_DATE, dept_id INTEGER REFERENCES departments(dept_id) ON DELETE RESTRICT NOT NULL);
CREATE TABLE
postgres=# CREATE TABLE blog_posts (post_id SERIAL PRIMARY KEY, title VARCHAR(200) NOT NULL, content TEXT, author VARCHAR(100), published_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE
postgres=# CREATE TABLE comments (comment_id SERIAL PRIMARY KEY, post_id INTEGER REFERENCES blog_posts(post_id) ON DELETE CASCADE NOT NULL, commenter_name VARCHAR(100), comment_text TEXT NOT NULL, comment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP);
CREATE TABLE
postgres=# INSERT INTO DEPARTMENTS (dept_name, manager_name, budget) VALUES ('Engineering', 'Alice Johnson', 500000.00), ('Marketing', 'Bob Wilson', 200000.00);
INSERT 0 2
postgres=# SELECT * FROM departments;
 dept_id |  dept_name  | manager_name  |  budget
---------+-------------+---------------+-----------
       1 | Engineering | Alice Johnson | 500000.00
       2 | Marketing   | Bob Wilson    | 200000.00
(2 rows)


postgres=# INSERT INTO employees (first_name, last_name, position, salary, dept_id) VALUES ('John', 'Smith', 'Software Engineer', 75000.00, 1), ('Jane', 'Doe', 'Senior Developer', 85000.00, 1), ('Mike', 'Brown', 'DevOps Engineer', 80000.00, 1), ('Sarah', 'Davis', 'Marketing Specialist', 55000.00, 2);
INSERT 0 4
postgres=# SELECT * FROM employees;
 emp_id | first_name | last_name |       position       |  salary  | hire_date  | dept_id
--------+------------+-----------+----------------------+----------+------------+---------
      1 | John       | Smith     | Software Engineer    | 75000.00 | 2025-09-19 |       1
      2 | Jane       | Doe       | Senior Developer     | 85000.00 | 2025-09-19 |       1
      3 | Mike       | Brown     | DevOps Engineer      | 80000.00 | 2025-09-19 |       1
      4 | Sarah      | Davis     | Marketing Specialist | 55000.00 | 2025-09-19 |       2
(4 rows)


postgres=#
postgres=# CREATE TABLE students (student_id SERIAL PRIMARY KEY, first_name VARCHAR(50) NOT NULL, last_name VARCHAR(50) NOT NULL, email VARCHAR(50) UNIQUE, enrollment_date DATE DEFAULT CURRENT_DATE);
CREATE TABLE
postgres=# CREATE TABLE courses (course_id SERIAL PRIMARY KEY, course_code VARCHAR(10) UNIQUE NOT NULL, course_name VARCHAR(100) NOT NULL, credits INTEGER NOT NULL, instructor VARCHAR(100));
CREATE TABLE
postgres=# CREATE TABLE student_enrollments (enrollment_id SERIAL PRIMARY KEY, student_id INTEGER REFERENCES students(student_id) ON DELETE CASCADE NOT NULL, course_id INTEGER REFERENCES courses(course_id) NOT NULL, enrollment_date DATE DEFAULT CURRENT_DATE, grade CHAR(2), UNIQUE (student_id, course_id));
CREATE TABLE
postgres=# INSERT INTO students (first_name, last_name, email) VALUES ('Alice', 'Johnson', 'alice@university.edu'), ('Bob', 'Smith', 'bob@university.edu'), ('Carol', 'Wilson', 'carol@university.edu');
INSERT 0 3
postgres=# INSERT INTO courses (course_code, course_name, credits, instructor) VALUES ('CS101', 'Introduction to Programming', 3, 'Dr. Brown'), ('CS201', 'Data Structures', 4, 'Dr. Davis'), ('MATH101', 'Calculus I', 4, 'Dr. Wilson');
INSERT 0 3
postgres=# INSERT INTO student_enrollments (student_id, course_id, grade) VALUES (1, 1, 'A'), (1, 2, 'B+'), (2, 1, 'A-'), (2, 3, 'B'), (3, 2, 'A'), (3, 3, 'A-');
INSERT 0 6
postgres=#